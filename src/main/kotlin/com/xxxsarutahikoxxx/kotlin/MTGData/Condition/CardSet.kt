package com.xxxsarutahikoxxx.kotlin.MTGData.Condition

import com.xxxsarutahikoxxx.kotlin.MTGData.Structure.*
import com.xxxsarutahikoxxx.kotlin.MTGData.Type.*


// CardSet
fun piFactory.cardset(cardset : CardSetType) : piCondition = { cardset == it.cardset }
fun piFactory.cardsetOr(cardsets : Iterable<CardSetType>) : piCondition = { it.cardset in cardsets }

val piFactory.Tenth_Edition : piCondition get() = cardset(CardSetTypes.Tenth_Edition)
val piFactory.Unlimited_Edition : piCondition get() = cardset(CardSetTypes.Unlimited_Edition)
val piFactory.Revised_Edition : piCondition get() = cardset(CardSetTypes.Revised_Edition)
val piFactory.Fourth_Edition_Foreign_Black_Border : piCondition get() = cardset(CardSetTypes.Fourth_Edition_Foreign_Black_Border)
val piFactory.Fourth_Edition : piCondition get() = cardset(CardSetTypes.Fourth_Edition)
val piFactory.Fifth_Dawn : piCondition get() = cardset(CardSetTypes.Fifth_Dawn)
val piFactory.Fifth_Edition : piCondition get() = cardset(CardSetTypes.Fifth_Edition)
val piFactory.Classic_Sixth_Edition : piCondition get() = cardset(CardSetTypes.Classic_Sixth_Edition)
val piFactory.Seventh_Edition : piCondition get() = cardset(CardSetTypes.Seventh_Edition)
val piFactory.Eighth_Edition : piCondition get() = cardset(CardSetTypes.Eighth_Edition)
val piFactory.Ninth_Edition : piCondition get() = cardset(CardSetTypes.Ninth_Edition)
val piFactory.Aether_Revolt : piCondition get() = cardset(CardSetTypes.Aether_Revolt)
val piFactory.Amonkhet : piCondition get() = cardset(CardSetTypes.Amonkhet)
val piFactory.Shards_of_Alara : piCondition get() = cardset(CardSetTypes.Shards_of_Alara)
val piFactory.Alliances : piCondition get() = cardset(CardSetTypes.Alliances)
val piFactory.Apocalypse : piCondition get() = cardset(CardSetTypes.Apocalypse)
val piFactory.Alara_Reborn : piCondition get() = cardset(CardSetTypes.Alara_Reborn)
val piFactory.Arabian_Nights : piCondition get() = cardset(CardSetTypes.Arabian_Nights)
val piFactory.Antiquities : piCondition get() = cardset(CardSetTypes.Antiquities)
val piFactory.Avacyn_Restored : piCondition get() = cardset(CardSetTypes.Avacyn_Restored)
val piFactory.Battle_for_Zendikar : piCondition get() = cardset(CardSetTypes.Battle_for_Zendikar)
val piFactory.Born_of_the_Gods : piCondition get() = cardset(CardSetTypes.Born_of_the_Gods)
val piFactory.Betrayers_of_Kamigawa : piCondition get() = cardset(CardSetTypes.Betrayers_of_Kamigawa)
val piFactory.Champions_of_Kamigawa : piCondition get() = cardset(CardSetTypes.Champions_of_Kamigawa)
val piFactory.Conflux : piCondition get() = cardset(CardSetTypes.Conflux)
val piFactory.Coldsnap : piCondition get() = cardset(CardSetTypes.Coldsnap)
val piFactory.Dragons_Maze : piCondition get() = cardset(CardSetTypes.Dragons_Maze)
val piFactory.Dissension : piCondition get() = cardset(CardSetTypes.Dissension)
val piFactory.Dark_Ascension : piCondition get() = cardset(CardSetTypes.Dark_Ascension)
val piFactory.Dominaria : piCondition get() = cardset(CardSetTypes.Dominaria)
val piFactory.The_Dark : piCondition get() = cardset(CardSetTypes.The_Dark)
val piFactory.Darksteel : piCondition get() = cardset(CardSetTypes.Darksteel)
val piFactory.Dragons_of_Tarkir : piCondition get() = cardset(CardSetTypes.Dragons_of_Tarkir)
val piFactory.Throne_of_Eldraine : piCondition get() = cardset(CardSetTypes.Throne_of_Eldraine)
val piFactory.Eldritch_Moon : piCondition get() = cardset(CardSetTypes.Eldritch_Moon)
val piFactory.Eventide : piCondition get() = cardset(CardSetTypes.Eventide)
val piFactory.Exodus : piCondition get() = cardset(CardSetTypes.Exodus)
val piFactory.Foreign_Black_Border : piCondition get() = cardset(CardSetTypes.Foreign_Black_Border)
val piFactory.Fallen_Empires : piCondition get() = cardset(CardSetTypes.Fallen_Empires)
val piFactory.Fate_Reforged : piCondition get() = cardset(CardSetTypes.Fate_Reforged)
val piFactory.Future_Sight : piCondition get() = cardset(CardSetTypes.Future_Sight)
val piFactory.Guildpact : piCondition get() = cardset(CardSetTypes.Guildpact)
val piFactory.Guilds_of_Ravnica : piCondition get() = cardset(CardSetTypes.Guilds_of_Ravnica)
val piFactory.Gatecrash : piCondition get() = cardset(CardSetTypes.Gatecrash)
val piFactory.Homelands : piCondition get() = cardset(CardSetTypes.Homelands)
val piFactory.Hour_of_Devastation : piCondition get() = cardset(CardSetTypes.Hour_of_Devastation)
val piFactory.Ice_Age : piCondition get() = cardset(CardSetTypes.Ice_Age)
val piFactory.Ikoria_Lair_of_Behemoths : piCondition get() = cardset(CardSetTypes.Ikoria_Lair_of_Behemoths)
val piFactory.Invasion : piCondition get() = cardset(CardSetTypes.Invasion)
val piFactory.Innistrad : piCondition get() = cardset(CardSetTypes.Innistrad)
val piFactory.Journey_into_Nyx : piCondition get() = cardset(CardSetTypes.Journey_into_Nyx)
val piFactory.Judgment : piCondition get() = cardset(CardSetTypes.Judgment)
val piFactory.Kaladesh : piCondition get() = cardset(CardSetTypes.Kaladesh)
val piFactory.Khans_of_Tarkir : piCondition get() = cardset(CardSetTypes.Khans_of_Tarkir)
val piFactory.Limited_Edition_Alpha : piCondition get() = cardset(CardSetTypes.Limited_Edition_Alpha)
val piFactory.Limited_Edition_Beta : piCondition get() = cardset(CardSetTypes.Limited_Edition_Beta)
val piFactory.Legends : piCondition get() = cardset(CardSetTypes.Legends)
val piFactory.Legions : piCondition get() = cardset(CardSetTypes.Legions)
val piFactory.Lorwyn : piCondition get() = cardset(CardSetTypes.Lorwyn)
val piFactory.Magic_2010 : piCondition get() = cardset(CardSetTypes.Magic_2010)
val piFactory.Magic_2011 : piCondition get() = cardset(CardSetTypes.Magic_2011)
val piFactory.Magic_2012 : piCondition get() = cardset(CardSetTypes.Magic_2012)
val piFactory.Magic_2013 : piCondition get() = cardset(CardSetTypes.Magic_2013)
val piFactory.Magic_2014 : piCondition get() = cardset(CardSetTypes.Magic_2014)
val piFactory.Magic_2015 : piCondition get() = cardset(CardSetTypes.Magic_2015)
val piFactory.Core_Set_2019 : piCondition get() = cardset(CardSetTypes.Core_Set_2019)
val piFactory.Core_Set_2020 : piCondition get() = cardset(CardSetTypes.Core_Set_2020)
val piFactory.Core_Set_2021 : piCondition get() = cardset(CardSetTypes.Core_Set_2021)
val piFactory.Mirrodin_Besieged : piCondition get() = cardset(CardSetTypes.Mirrodin_Besieged)
val piFactory.Mirage : piCondition get() = cardset(CardSetTypes.Mirage)
val piFactory.Mercadian_Masques : piCondition get() = cardset(CardSetTypes.Mercadian_Masques)
val piFactory.Morningtide : piCondition get() = cardset(CardSetTypes.Morningtide)
val piFactory.Mirrodin : piCondition get() = cardset(CardSetTypes.Mirrodin)
val piFactory.Nemesis : piCondition get() = cardset(CardSetTypes.Nemesis)
val piFactory.New_Phyrexia : piCondition get() = cardset(CardSetTypes.New_Phyrexia)
val piFactory.Odyssey : piCondition get() = cardset(CardSetTypes.Odyssey)
val piFactory.Oath_of_the_Gatewatch : piCondition get() = cardset(CardSetTypes.Oath_of_the_Gatewatch)
val piFactory.Onslaught : piCondition get() = cardset(CardSetTypes.Onslaught)
val piFactory.Magic_Origins : piCondition get() = cardset(CardSetTypes.Magic_Origins)
val piFactory.Prophecy : piCondition get() = cardset(CardSetTypes.Prophecy)
val piFactory.Planar_Chaos : piCondition get() = cardset(CardSetTypes.Planar_Chaos)
val piFactory.Planeshift : piCondition get() = cardset(CardSetTypes.Planeshift)
val piFactory.Ravnica_City_of_Guilds : piCondition get() = cardset(CardSetTypes.Ravnica_City_of_Guilds)
val piFactory.Rivals_of_Ixalan : piCondition get() = cardset(CardSetTypes.Rivals_of_Ixalan)
val piFactory.Ravnica_Allegiance : piCondition get() = cardset(CardSetTypes.Ravnica_Allegiance)
val piFactory.Rise_of_the_Eldrazi : piCondition get() = cardset(CardSetTypes.Rise_of_the_Eldrazi)
val piFactory.Return_to_Ravnica : piCondition get() = cardset(CardSetTypes.Return_to_Ravnica)
val piFactory.Scourge : piCondition get() = cardset(CardSetTypes.Scourge)
val piFactory.Shadowmoor : piCondition get() = cardset(CardSetTypes.Shadowmoor)
val piFactory.Shadows_over_Innistrad : piCondition get() = cardset(CardSetTypes.Shadows_over_Innistrad)
val piFactory.Saviors_of_Kamigawa : piCondition get() = cardset(CardSetTypes.Saviors_of_Kamigawa)
val piFactory.Scars_of_Mirrodin : piCondition get() = cardset(CardSetTypes.Scars_of_Mirrodin)
val piFactory.Stronghold : piCondition get() = cardset(CardSetTypes.Stronghold)
val piFactory.Summer_Magic__Edgar : piCondition get() = cardset(CardSetTypes.Summer_Magic__Edgar)
val piFactory.Theros_Beyond_Death : piCondition get() = cardset(CardSetTypes.Theros_Beyond_Death)
val piFactory.Theros : piCondition get() = cardset(CardSetTypes.Theros)
val piFactory.Tempest : piCondition get() = cardset(CardSetTypes.Tempest)
val piFactory.Torment : piCondition get() = cardset(CardSetTypes.Torment)
val piFactory.Time_Spiral_Timeshifted : piCondition get() = cardset(CardSetTypes.Time_Spiral_Timeshifted)
val piFactory.Time_Spiral : piCondition get() = cardset(CardSetTypes.Time_Spiral)
val piFactory.Urzas_Destiny : piCondition get() = cardset(CardSetTypes.Urzas_Destiny)
val piFactory.Urzas_Legacy : piCondition get() = cardset(CardSetTypes.Urzas_Legacy)
val piFactory.Urzas_Saga : piCondition get() = cardset(CardSetTypes.Urzas_Saga)
val piFactory.Visions : piCondition get() = cardset(CardSetTypes.Visions)
val piFactory.War_of_the_Spark : piCondition get() = cardset(CardSetTypes.War_of_the_Spark)
val piFactory.Weatherlight : piCondition get() = cardset(CardSetTypes.Weatherlight)
val piFactory.Worldwake : piCondition get() = cardset(CardSetTypes.Worldwake)
val piFactory.Ixalan : piCondition get() = cardset(CardSetTypes.Ixalan)
val piFactory.Zendikar : piCondition get() = cardset(CardSetTypes.Zendikar)
val piFactory.Zendikar_Rising : piCondition get() = cardset(CardSetTypes.Zendikar_Rising)
